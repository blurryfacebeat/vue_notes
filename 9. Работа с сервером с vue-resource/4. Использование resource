// App.vue //
<template>
  <div class="container pt-2">
    <div class="form-group">
      <label for="name">Car name</label>
      <input id="name" type="text" class="form-control" v-model.trim="carName">
    </div>

    <div class="form-group">
      <label for="age">Car name</label>
    <input id="age" type="text" class="form-control" v-model.number="carYear">
    </div>

    <hr>

    <ul class="list-group">
      <li class="list-group-item" v-for="car of cars" :key="car.id"><strong>{{ car.name }}</strong> - {{ car.year }}</li>
    </ul>

    <button class="btn btn-success" @click="createCar">Create car</button>
    <button class="btn btn-primary" @click="getCars">Get cars</button>
  </div>
</template>

<script>
export default {
  data() {
    return {
      carName: '',
      carYear: 2018,
      cars: [],
      resource: null
    }
  },
  methods: {
    createCar() {
      const car = {
        name: this.carName,
        year: this.carYear
      };

      // this.$http.post('http://localhost:3000/cars', car)
      //   .then(response => {
      //     return response.json();
      //   })
      //   .then(newCar => {
      //     console.log(newCar);
      //   });
      this.resource.save({}, car);
    },
    getCars() {
      // this.$http.get('http://localhost:3000/cars')
      //   .then(cars => {
      //     return cars.json();
      //   })
      //   .then(cars => {
      //     this.cars = cars;
      //   });
      this.resource.get().then(response => response.json())
        .then(cars => this.cars = cars);
    }
  },
  // Вызывается, когда компонент создан
  created() {
    // resource позволяет удобно работать с однотипными сущностями
    // Поместили в resource http-запрос по данному адресу
    this.resource = this.$resource('http://localhost:3000/cars');
  }
}
</script>

<style lang="scss" scoped>

</style>
