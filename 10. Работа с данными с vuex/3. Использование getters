// Counter.vue //
<template>
    <div>
        <h2>Counter: {{ counter }}</h2>
    </div>
</template>

<script>
export default {
  data() {
    return {

    }
  },
  computed: {
    counter() {
        return this.$store.getters.computedCounter;
    }
  }
}
</script>

<style lang="scss" scoped>

</style>

// SecondCounter.vue //
<template>
    <div>
        <h2>Second Counter: {{ counter }}</h2>
    </div>
</template>

<script>
export default {
  data() {
    return {

    }
  },
  computed: {
    counter() {
        return this.$store.getters.computedCounter;
    }
  }
}
</script>

<style lang="scss" scoped>

</style>

// index.js //
import Vue from 'vue';
import Vuex from 'vuex';

Vue.use(Vuex);

export default new Vuex.Store({
    state: {
        counter: 0
    },
    getters: {
        // Всегда должны что-то вернуть. Мы используем это, например, когда нам нужно, чтобы счетчики выдавали значение по одинаковой формуле, не повторяя код
        computedCounter(state) {
            return state.counter * (7 - 2 * (5 + 4));
        }
    }
});
