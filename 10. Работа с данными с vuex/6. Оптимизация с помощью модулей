// App.vue //
<template>
  <div class="container text-center pt-5">
    <h1>{{ title }}</h1>
    <hr>
    <app-counter></app-counter>
    <hr>
    <app-second-counter></app-second-counter>
    <hr>
    <app-actions></app-actions>
  </div>
</template>

<script>
import Counter from './Counter';
import Actions from './Actions';
import SecondCounter from './SecondCounter';

export default {
  data() {
    return {
      
    }
  },
  components: {
    appCounter: Counter,
    appActions: Actions,
    appSecondCounter: SecondCounter
  },
  computed: {
    title() {
      return this.$store.getters.title;
    }
  }
}
</script>

<style lang="scss" scoped>

</style>

// Actions.vue //
<template>
    <div>
        <button class="btn btn-success" @click="updateCounter(1)">Add</button>
        <button class="btn btn-danger" @click="updateCounter(-1)">Sub</button>
    </div>
</template>

<script>
export default {
  data() {
    return {

    }
  },
  methods: {
      updateCounter(val) {
        this.$store.dispatch('asyncChangeCounter', {
            counterValue: val,
            timeOutDelay: 200
        });
    }
  }
}
</script>

<style lang="scss" scoped>

</style>

// index.js //
import Vue from 'vue';
import Vuex from 'vuex';
import counter from './counter';

Vue.use(Vuex);

export default new Vuex.Store({
    modules: {
        // counter: counter
        counter
    },
    state: {
        title: 'Hello from store'
    },
    getters: {
        title(state) {
            return state.title + '!!!';
        }
    }
});

// counter.js //
export default {
    state: {
        counter: 0
    },
    mutations: {
        changeCounter(state, payload) {
            state.counter += payload;
        }
    },
    actions: {
        asyncChangeCounter({commit}, payload) {
            setTimeout(() => {
                commit('changeCounter', payload.counterValue);
            }, payload.timeOutDelay);
        }
    },
    getters: {
        computedCounter(state) {
            return state.counter;
        }
    }
}
